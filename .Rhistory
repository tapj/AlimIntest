head(sanger.454)
head(sanger_454)
sanger.454 = read.table("data-raw/sanger_vs_454.classifier.total", sep="\t")
technology = sanger.454$V1; levels(technology) = c("Sanger","454seq","454seq","454seq","454seq")
run = sanger.454$V1; levels(run) = c("full","1/16 lanes with 12 MID","1/8 lanes 12 MID","1/8 lanes 24 MID", "1/16 lanes 8 MID")
samples = sanger.454$V1; levels(samples) = LETTERS[1:5]
sanger.454 = cbind(samples, technology, run, sanger.454$V2, sanger.454$V3)
head(sanger.454)
sanger.454 = data.frame(samples, technology, run, sanger.454$V2, sanger.454$V3)
sanger.454 = data.frame(samples, technology, run, tax=sanger.454$V2, conf=sanger.454$V3)
 tmp = data.frame(samples, technology, run, tax=sanger.454$V2, conf=sanger.454$V3)
head(sanger.454)
sanger.454 = read.table("data-raw/sanger_vs_454.classifier.total", sep="\t")
technology = sanger.454$V1; levels(technology) = c("Sanger","454seq","454seq","454seq","454seq")
run = sanger.454$V1; levels(run) = c("full","1/16 lanes with 12 MID","1/8 lanes 12 MID","1/8 lanes 24 MID", "1/16 lanes 8 MID")
samples = sanger.454$V1; levels(samples) = LETTERS[1:5]
head(data.frame(samples, technology, run, tax=sanger.454$V2, conf=sanger.454$V3))
sanger_454 = data.frame(samples, technology, run, tax=sanger.454$V2, conf=sanger.454$V3)
write.csv2(sanger_454, file="data-raw/sanger_454.csv")
write.csv2(sanger_454, file="data-raw/sanger.454.csv")
q()
ls()
richness.before
jsd
microbial.change
data.frame(microbial.change,group)
boxplot(data.frame(microbial.change,group)$jsd~group)
pairwise.wilcox.test(data.frame(microbial.change,group)$jsd,group)
pairwise.wilcox.test(data.frame(microbial.change,group)$jsd,group, p.adjust="none")
pairwise.wilcox.test(data.frame(microbial.change,group)$jsd,data.frame(microbial.change,group)$change, p.adjust="none")
pairwise.wilcox.test(data.frame(microbial.change,group)$jsd,group, p.adjust="none", paired=T)
pairwise.wilcox.test(data.frame(microbial.change,group)$jsd,data.frame(microbial.change,group)$change, p.adjust="none", paired=T)
ls()
metadata76[7:14]
metadata76$richness
cor(metadata76$richness, metadata76[7:14], method="spearman")
cor(metadata76$richness[-c(50,70)], metadata76[-c(50,70),7:14], method="spearman")
cor(metadata76$richness[-c(50,70)], metadata76[-c(50,70),7:14], method="pearson")
cor(metadata76$richness[-c(50,70)], metadata76[-c(50,70),7:14], method="spearman")
library(ggplot2)
library(ade4)
cor(metadata76$richness[-c(50,70)],as.data.frame(t(log10(noise.removal(microbiota_tax$genus_tax, percent=1)[,-attr(na.omit(metadata76[7:14]),"na.action")] + 10^-5))))
library(BiotypeR)
cor(metadata76$richness[-c(50,70)],as.data.frame(t(log10((microbiota_tax$genus_tax, percent=1)[,-attr(na.omit(metadata76[7:14]),"na.action")] + 10^-5))))
cor(metadata76$richness[-c(50,70)],as.data.frame(t(log10((microbiota_tax$genus_tax)[,-attr(na.omit(metadata76[7:14]),"na.action")] + 10^-5))))
sort(cor(metadata76$richness[-c(50,70)],as.data.frame(t(log10((microbiota_tax$genus_tax)[,-attr(na.omit(metadata76[7:14]),"na.action")] + 10^-5)))))
order(cor(metadata76$richness[-c(50,70)],as.data.frame(t(log10((microbiota_tax$genus_tax)[,-attr(na.omit(metadata76[7:14]),"na.action")] + 10^-5)))))
cor(metadata76$richness[-c(50,70)],as.data.frame(t(log10((microbiota_tax$genus_tax)[,-attr(na.omit(metadata76[7:14]),"na.action")] + 10^-5))))
cor(metadata76$richness[-c(50,70)],as.data.frame(t(log10((microbiota_tax$genus_tax)[-1,-attr(na.omit(metadata76[7:14]),"na.action")] + 10^-5))))
cor(metadata76$richness,as.data.frame(t(log10((microbiota_tax$genus_tax) + 10^-5))))
cor(metadata76$richness,as.data.frame(t(log10((microbiota_tax$genus_tax[-1,]) + 10^-5))))
sort(cor(metadata76$richness,as.data.frame(t(log10((microbiota_tax$genus_tax[-1,]) + 10^-5)))))
cor(metadata76$richness,as.data.frame(t(log10((microbiota_tax$genus_tax[-1,]) + 10^-5))), method="spearman")
sort(cor(metadata76$richness,as.data.frame(t(log10((microbiota_tax$genus_tax[-1,]) + 10^-5))), method="spearman"))
q()
library(devtools)
user=Sys.info()[["user"]]
require(rmarkdown)
require(markdown)
library(ade4)
library(RColorBrewer)
library(BiotypeR)
library(gridExtra)
library(reshape2)
library(vegan)
library(knitr)
library(ggplot2)
library(scales)
library(dplyr)
#source("src/mclapply.hack.R")
build()
install()
build_vignettes()
plot(genus.scfa.coi)
plot(genus.scfa.coi)
genus.scfa.coi
tes
test
unclass(genus.scfa.coi)
s.cocircle(genus.scfa.coi$co)
s.corcircle(genus.scfa.coi$co)
s.corcircle(genus.scfa.coi$li)
s.corcircle(genus.scfa.coi$l1)
s.corcircle(genus.scfa.coi$li)
s.corcircle(genus.scfa.coi$co, add=T)
cor(metadata76$richness[-c(50,70)], metadata76[-c(50,70),7:14], method="spearman")
cor(metadata76$richness,as.data.frame(t(log10((microbiota_tax$genus_tax[-1,]) + 10^-5))), method="spearman")
data.frame(t(genus.scfa.coi$co[1:2]), t(genus.scfa.coi$li)[1:2])
genus.scfa.coi$co
genus.scfa.coi$co[1:2]
t(genus.scfa.coi$co[1:2])
data.frame(genus.scfa.coi$co[1:2], richness.cor=cor(metadata76$richness[-c(50,70)], metadata76[-c(50,70),7:14], method="spearman"))
data.frame(genus.scfa.coi$co[1:2], richness.cor=t(cor(metadata76$richness[-c(50,70)], metadata76[-c(50,70),7:14], method="spearman")))
scfa.richness.cor = data.frame(genus.scfa.coi$co[1:2], richness.cor=t(cor(metadata76$richness[-c(50,70)], metadata76[-c(50,70),7:14], method="spearman")))
genus.richness.cor = data.frame(genus.scfa.coi$co[-1,1:2], richness.cor=t(cor(metadata76$richness[-c(50,70)], metadata76[-c(50,70),7:14], method="spearman")))
genus.richness.cor = data.frame(genus.scfa.coi$co[-1,1:2], richness.cor=t(cor(metadata76$richness,as.data.frame(t(log10((microbiota_tax$genus_tax[-1,]) + 10^-5))), method="spearman")))
data.frame(genus.scfa.coi$co[-1,1:2], richness.cor=t(cor(metadata76$richness,as.data.frame(t(log10((microbiota_tax$genus_tax[-1,]) + 10^-5))), method="spearman")))
data.frame(genus.scfa.coi$li[-1,1:2], richness.cor=t(cor(metadata76$richness,as.data.frame(t(log10((microbiota_tax$genus_tax[-1,]) + 10^-5))), method="spearman")))
genus.scfa.coi$li[-1,1:2]
cor(metadata76$richness,as.data.frame(t(log10((microbiota_tax$genus_tax[-1,]) + 10^-5))), method="spearman")
cor(metadata76$richness,as.data.frame(t(log10((microbiota_tax$genus_tax[-1,]) + 10^-5))), method="spearman")[row.names(genus.scfa.coi$li[-1,1:2])]
cor(metadata76$richness,as.data.frame(t(log10((microbiota_tax$genus_tax[-1,]) + 10^-5))), method="spearman")[[row.names(genus.scfa.coi$li[-1,1:2])]]
cor(metadata76$richness,as.data.frame(t(log10((microbiota_tax$genus_tax[-1,]) + 10^-5))), method="spearman")[,row.names(genus.scfa.coi$li[-1,1:2])]
genus.richness.cor = data.frame(genus.scfa.coi$li[-1,1:2],
richness.cor=cor(metadata76$richness,as.data.frame(t(log10((microbiota_tax$genus_tax[-1,]) + 10^-5))), method="spearman")[,row.names(genus.scfa.coi$li[-1,1:2])])
colnames(genus.richness.cor) = colnames(scfa.richness.cor)
scfa.richness.cor = data.frame(genus.scfa.coi$co[1:2], richness.cor=t(cor(metadata76$richness[-c(50,70)], metadata76[-c(50,70),7:14], method="spearman")))
genus.richness.cor = data.frame(genus.scfa.coi$li[-1,1:2],
richness.cor=cor(metadata76$richness,as.data.frame(t(log10((microbiota_tax$genus_tax[-1,]) + 10^-5))), method="spearman")[,row.names(genus.scfa.coi$li[-1,1:2])])
colnames(genus.richness.cor) = colnames(scfa.richness.cor)
genus.scfa.richness.cor = cbind(scfa.richness.cor, genus.richness.cor)
genus.scfa.richness.cor = rbind(scfa.richness.cor, genus.richness.cor)
ggplot(genus.scfa.richness.cor) + geom_text(aes(x=Comp1, y=Comp2, label=row.names(genus.scfa.richness.cor), col=richness.cor)
)
ggplot(genus.scfa.richness.cor) + geom_text(aes(x=Comp1, y=Comp2, label=row.names(genus.scfa.richness.cor), col=richness.cor)) + xlim(-1,1) + ylim(-1,1)
ggplot(genus.scfa.richness.cor) + geom_text(aes(x=Comp1, y=Comp2, label=row.names(genus.scfa.richness.cor), col=richness.cor)) + scale_color_manual("spearman correlation\with microbiota richness")
ggplot(genus.scfa.richness.cor) + geom_text(aes(x=Comp1, y=Comp2, label=row.names(genus.scfa.richness.cor), col=richness.cor)) + scale_color_manual("spearman correlation\nwith microbiota richness")
ggplot(genus.scfa.richness.cor) + geom_text(aes(x=Comp1, y=Comp2, label=row.names(genus.scfa.richness.cor), col=richness.cor)) + scale_color("spearman correlation\nwith microbiota richness")
ggplot(genus.scfa.richness.cor) + geom_text(aes(x=Comp1, y=Comp2, label=row.names(genus.scfa.richness.cor), col=richness.cor)) + scale_color_gradient("spearman correlation\nwith microbiota richness")
?scale_color_gradient
p3 = ggplot(genus.scfa.richness.cor) + geom_text(aes(x=Comp1, y=Comp2, label=row.names(genus.scfa.richness.cor), col=richness.cor))
p3 + scale_colour_gradient(limits=c(3, 4), low="red", high="white", space="Lab")
p3 + scale_colour_gradient( low="red", high="white", space="Lab")
p3 + scale_colour_gradient( low="red", high="green", space="Lab")
p3 + scale_colour_gradient(limits=c(-0.5, 0.5), low="red", high="green", space="Lab")
p3 + scale_colour_gradient(limits=c(-0.6, 0.6), low="red", high="green", space="Lab")
p3 + scale_colour_gradient("spearman correlation\with microbiota richness", limits=c(-0.6, 0.6), low="red", high="green", space="Lab")
p3 + scale_colour_gradient("spearman correlation\nwith microbiota richness", limits=c(-0.6, 0.6), low="red", high="green", space="Lab")
p3 + scale_colour_gradient("Spearman correlation\nwith microbiota richness", limits=c(-0.6, 0.6), low="red", high="green", space="Lab")
dev.size()
dev.size()
build_vignettes()
build_vignettes()
build_vignettes()
build_vignettes()
build_vignettes()
build_vignettes()
build_vignettes()
getwd()
q()
read.csv("data-raw/basal_diet_alimintest")
read.csv("data-raw/diet_basal_alimintest.csv")
read.csv2("data-raw/diet_basal_alimintest.csv")
basal_diet = read.csv2("data-raw/diet_basal_alimintest.csv")
names(basal_diet)
basal_diet$sujet
basal_diet$sujet = as.character(basal_diet$sujet)
basal_diet$jour = as.character(basal_diet$jour)
save("data/basal_diet.RData")
save(basal_diet,"data/basal_diet.RData")
save(basal_diet,file="data/basal_diet.RData")
library(ade4)
diet.acm = dudi.acm(basal_diet[,-c(1:3)], nf=3, scannf=FALSE)
as.factor(basal_diet[,-c(1:3)])
factor(basal_diet[,-c(1:3)])
for(i in 4:dim(basal_diet)[2]){
basal_diet[,i] = as.factor(basal_diet[,i])
}
summary(basal_diet)
save(basal_diet,file="data/basal_diet.RData")
diet.acm = dudi.acm(basal_diet[,-c(1:3)], nf=3, scannf=FALSE)
plot(diet.acm)
scatter(diet.acm)
bcq(diet.acm, fac=basal_diet[,1])
diet.bca = bca(diet.acm, fac=basal_diet[,1], nf=3, scannf=F)
diet.bca = bca(diet.acm, fac=as.factor(basal_diet[,1]), nf=3, scannf=F)
plot(diet.bca)
randtest(diet.bca)
diet.bca = bca(diet.acm, fac=as.factor(basal_diet[,3]), nf=3, scannf=F)
randtest(diet.bca)
diet.bca = bca(diet.acm, fac=as.factor(basal_diet[,1]), nf=3, scannf=F)
randtest(diet.bca)
diet.acm = dudi.acm(basal_diet[which(basal_diet[,1]!="17"),-c(1:3)], nf=3, scannf=FALSE)
diet.bca = bca(diet.acm, fac=as.factor(basal_diet[which(basal_diet[,1]!="17"),1]), nf=3, scannf=F)
randtest(diet.bca)
which(basal_diet[,1]!="17")
as.factor(basal_diet[which(basal_diet[,1]!="17"),1])
summary(basal_diet[which(basal_diet[,1]!="17"),-c(1:3)])
richness
ls()
richness.before
metadata76
summary(metadata76)
metadata76[which(metadata76$Time.point=="2"),]
metadata76[which(metadata76$Time.point=="2"),c("Subject_Id","richness")]
basal_richness = metadata76[which(metadata76$Time.point=="2"),c("Subject_Id","richness")]
diet.bca
diet.bca$li
merge(diet.bca$li, basal_richness, by.x=row.names(diet.bca$li), by.y="Subject_Id")
merge(diet.bca$li, basal_richness, by.x=row.names, by.y="Subject_Id")
merge(diet.bca$li, basal_richness, by.x=rownames, by.y="Subject_Id")
merge(data.frame(Subject_Id=row.names(diet.bca$li), basal_richness, by="Subject_Id"))
merge(data.frame(Subject_Id=row.names(diet.bca$li)), basal_richness, by="Subject_Id"))
merge(data.frame(Subject_Id=row.names(diet.bca$li)), basal_richness, by="Subject_Id")
merge(data.frame(Subject_Id=row.names(diet.bca$li), diet.bca$li), basal_richness, by="Subject_Id")
diet.richness.bca = merge(data.frame(Subject_Id=row.names(diet.bca$li), diet.bca$li), basal_richness, by="Subject_Id")
ggplot(diet.richness.bca, aes(x=Axis1, y=Axis2, col=richness) + geom_point()
ggplot(diet.richness.bca, aes(x=Axis1, y=Axis2, col=richness)) + geom_point()
library(ggplot2)
ggplot(diet.richness.bca, aes(x=Axis1, y=Axis2, col=richness)) + geom_point()
ggplot(diet.richness.bca, aes(x=Axis1, y=Axis2, col=richness, size=richness)) + geom_point()
cor.test(diet.richness.bca$Axis2, diet.richness.bca$richness)
cor.test(diet.richness.bca$Axis1, diet.richness.bca$richness)
cor.test(diet.richness.bca$Axis3, diet.richness.bca$richness)
basal_diet_tmp = basal_diet[which(basal_diet$visite=="before_study"),]
for(i in 4:dim(basal_diet)[2]){
basal_diet[,i] = as.factor(basal_diet[,i])
}
diet.acm = dudi.acm(basal_diet_tmp[,-c(1:3)], nf=3, scannf=FALSE)
diet.bca = bca(diet.acm, fac=as.factor(basal_diet[,1]), nf=3, scannf=F)
randtest(diet.bca)
basal_richness = metadata76[which(metadata76$Time.point=="2"),c("Subject_Id","richness")]
diet.richness.bca = merge(data.frame(Subject_Id=row.names(diet.bca$li), diet.bca$li), basal_richness, by="Subject_Id")
ggplot(diet.richness.bca, aes(x=Axis1, y=Axis2, col=richness, size=richness)) + geom_point()
basal_diet_tmp = basal_diet[which(basal_diet$visite=="before_study"),]
for(i in 4:dim(basal_diet_tmp)[2]){
basal_diet_tmp[,i] = as.factor(basal_diet_tmp[,i])
}
diet.acm = dudi.acm(basal_diet_tmp[,-c(1:3)], nf=3, scannf=FALSE)
diet.bca = bca(diet.acm, fac=as.factor(basal_diet[,1]), nf=3, scannf=F)
randtest(diet.bca)
basal_richness = metadata76[which(metadata76$Time.point=="2"),c("Subject_Id","richness")]
diet.richness.bca = merge(data.frame(Subject_Id=row.names(diet.bca$li), diet.bca$li), basal_richness, by="Subject_Id")
ggplot(diet.richness.bca, aes(x=Axis1, y=Axis2, col=richness, size=richness)) + geom_point()
summary(basal_diet_tmp)
basal_diet_tmp = basal_diet[which(basal_diet$visite=="before_study"),]
for(i in 4:dim(basal_diet_tmp)[2]){
basal_diet_tmp[,i] = as.factor(as.character(basal_diet_tmp[,i]))
}
diet.acm = dudi.acm(basal_diet_tmp[,-c(1:3)], nf=3, scannf=FALSE)
diet.bca = bca(diet.acm, fac=as.factor(basal_diet[,1]), nf=3, scannf=F)
randtest(diet.bca)
basal_richness = metadata76[which(metadata76$Time.point=="2"),c("Subject_Id","richness")]
diet.richness.bca = merge(data.frame(Subject_Id=row.names(diet.bca$li), diet.bca$li), basal_richness, by="Subject_Id")
ggplot(diet.richness.bca, aes(x=Axis1, y=Axis2, col=richness, size=richness)) + geom_point()
basal_diet_tmp = basal_diet[which(basal_diet$visite=="before_study"),]
for(i in 4:dim(basal_diet_tmp)[2]){
basal_diet_tmp[,i] = as.factor(as.character(basal_diet_tmp[,i]))
}
diet.acm = dudi.acm(basal_diet_tmp[,-c(1:3)], nf=3, scannf=FALSE)
diet.bca = bca(diet.acm, fac=as.factor(basal_diet_tmp[,1]), nf=3, scannf=F)
randtest(diet.bca)
basal_richness = metadata76[which(metadata76$Time.point=="2"),c("Subject_Id","richness")]
diet.richness.bca = merge(data.frame(Subject_Id=row.names(diet.bca$li), diet.bca$li), basal_richness, by="Subject_Id")
ggplot(diet.richness.bca, aes(x=Axis1, y=Axis2, col=richness, size=richness)) + geom_point()
rgamma(100,10,.1)
gl(3,1,9)
gl(3,3)
counts <- c(18,17,15,20,10,20,25,13,12)
outcome <- gl(3,1,9)
treatment <- gl(3,3)
print(d.AD <- data.frame(treatment, outcome, counts))
glm.D93 <- glm(counts ~ outcome + treatment, family = poisson())
anova(glm.D93)
summary(glm.D93)
basal_richness
basal_diet[which(basal_diet$visite=="before_study" & basal_diet$jour=="-1"),]
basal_diet[which(basal_diet$visite=="before_study" & basal_diet$jour=="-1"),1]
sujet)merge(basal_richness,basal_diet[which(basal_diet$visite=="before_study" & basal_diet$jour=="-1"),], by.x="Subject_Id", by.y="")
merge(basal_richness,basal_diet[which(basal_diet$visite=="before_study" & basal_diet$jour=="-1"),], by.x="Subject_Id", by.y="sujet")
test = merge(basal_richness,basal_diet[which(basal_diet$visite=="before_study" & basal_diet$jour=="-1"),], by.x="Subject_Id", by.y="sujet")
summary(test)
glm(test$richness~test[,-c(1:4)], family = poisson())
test[,-c(1:4)]
glm(test$richness~., family = poisson(), data=test[,-c(1:4))])
glm(test$richness~., family = poisson(), data=test[,-c(1:4)])
test[, which(apply(test,2,sum)==0)]
test[, which(apply(test[-c(1:4)],2,sum)==0)]
for(i in 5:dim(test)[2]){
test[,i] = as.numeric(as.character(test[,i]))
}
test[, which(apply(test,2,sum)==0)]
test[, which(apply(test[-c(1:4)],2,sum)==0)]
apply(test[-c(1:4)],2,sum)
test[, which(4+apply(test[-c(1:4)],2,sum)==0)]
test[, 4+which(apply(test[-c(1:4)],2,sum)==0)]
test[, 4+which(apply(test[-c(1:4)],2,sum)!=0)]
test[, c(1:4,4+which(apply(test[-c(1:4)],2,sum)!=0))]
test[, c(2,4+which(apply(test[-c(1:4)],2,sum)!=0))]
glm(richness~., family = poisson(), data=test)
summary(test)
test = merge(basal_richness,basal_diet[which(basal_diet$visite=="before_study" & basal_diet$jour=="-1"),], by.x="Subject_Id", by.y="sujet")
for(i in 5:dim(test)[2]){
test[,i] = as.numeric(as.character(test[,i]))
}
test = test[, c(2,4+which(apply(test[-c(1:4)],2,sum)!=0))]
glm(richness~., family = poisson(), data=test)
plot(glm(richness~., family = poisson(), data=test))
cor(test$richness, test[,-1], method="spearman")
apply(test[,-1], 2, function(x) cor.test(test$richness, x)$p.value)
apply(test[,-1], 2, function(x) cor.test(test$richness, x, method="spearman")$p.value)
cor(test$richness, test[,-1], method="spearman")
test = merge(basal_richness,basal_diet[which(basal_diet$visite=="before_study",], by.x="Subject_Id", by.y="sujet")
for(i in 5:dim(test)[2]){
test[,i] = as.numeric(as.character(test[,i]))
}
test = test[, c(2,4+which(apply(test[-c(1:4)],2,sum)!=0))]
cor(test$richness, test[,-1], method="spearman")
apply(test[,-1], 2, function(x) cor.test(test$richness, x, method="spearman")$p.value)
test = merge(basal_richness,basal_diet[which(basal_diet$visite=="before_study"),], by.x="Subject_Id", by.y="sujet")
for(i in 5:dim(test)[2]){
test[,i] = as.numeric(as.character(test[,i]))
}
test = test[, c(2,4+which(apply(test[-c(1:4)],2,sum)!=0))]
cor(test$richness, test[,-1], method="spearman")
apply(test[,-1], 2, function(x) cor.test(test$richness, x, method="spearman")$p.value)
apply(test[,-1], 2, function(x) wilcox.test(test$richness, x, method="spearman")$p.value)
apply(test[,-1], 2, function(x) wilcox.test(test$richness, x)$p.value)
summary(test)
apply(test[,-1], 2, function(x) wilcox.test(test$richness~x)$p.value)
apply(test[,-1], 2, function(x) cor.test(test$richness, x, method="spearman")$p.value)
apply(test[,-1], 2, function(x) wilcox.test(test$richness~x)$p.value)
data.frame(rho=cor(test$richness, test[,-1], method="spearman"), p=apply(test[,-1], 2, function(x) wilcox.test(test$richness~x)$p.value))
data.frame(rho=cor(test$richness, test[,-1], method="spearman")[[1]], p=apply(test[,-1], 2, function(x) wilcox.test(test$richness~x)$p.value))
cor(test$richness, test[,-1], method="spearman")[[1]]
cor(test$richness, test[,-1], method="spearman")
t(cor(test$richness, test[,-1], method="spearman"))
data.frame(rho=t(cor(test$richness, test[,-1], method="spearman")), p=apply(test[,-1], 2, function(x) wilcox.test(test$richness~x)$p.value))
diet_test_result = data.frame(rho=t(cor(test$richness, test[,-1], method="spearman")), p=apply(test[,-1], 2, function(x) wilcox.test(test$richness~x)$p.value))
diet_test_result[which(diet_test_result$p<0.05),]
test = merge(basal_richness,basal_diet[which(basal_diet$visite=="before_study" & basal_diet$jour=="-1"),], by.x="Subject_Id", by.y="sujet")
#test = merge(basal_richness,basal_diet[which(basal_diet$visite=="before_study"),], by.x="Subject_Id", by.y="sujet")
for(i in 5:dim(test)[2]){
test[,i] = as.numeric(as.character(test[,i]))
}
test = test[, c(2,4+which(apply(test[-c(1:4)],2,sum)!=0))]
cor(test$richness, test[,-1], method="spearman")
apply(test[,-1], 2, function(x) cor.test(test$richness, x, method="spearman")$p.value)
diet_test_result = data.frame(rho=t(cor(test$richness, test[,-1], method="spearman")), p=apply(test[,-1], 2, function(x) wilcox.test(test$richness~x)$p.value))
diet_test_result[which(diet_test_result$p<0.05),]
test = merge(basal_richness,basal_diet[which(basal_diet$visite=="before_study" & basal_diet$jour=="-2"),], by.x="Subject_Id", by.y="sujet")
#test = merge(basal_richness,basal_diet[which(basal_diet$visite=="before_study"),], by.x="Subject_Id", by.y="sujet")
for(i in 5:dim(test)[2]){
test[,i] = as.numeric(as.character(test[,i]))
}
test = test[, c(2,4+which(apply(test[-c(1:4)],2,sum)!=0))]
cor(test$richness, test[,-1], method="spearman")
apply(test[,-1], 2, function(x) cor.test(test$richness, x, method="spearman")$p.value)
diet_test_result = data.frame(rho=t(cor(test$richness, test[,-1], method="spearman")), p=apply(test[,-1], 2, function(x) wilcox.test(test$richness~x)$p.value))
diet_test_result[which(diet_test_result$p<0.05),]
test = merge(basal_richness,basal_diet[which(basal_diet$visite=="before_study" & basal_diet$jour=="-3"),], by.x="Subject_Id", by.y="sujet")
#test = merge(basal_richness,basal_diet[which(basal_diet$visite=="before_study"),], by.x="Subject_Id", by.y="sujet")
for(i in 5:dim(test)[2]){
test[,i] = as.numeric(as.character(test[,i]))
}
test = test[, c(2,4+which(apply(test[-c(1:4)],2,sum)!=0))]
cor(test$richness, test[,-1], method="spearman")
apply(test[,-1], 2, function(x) cor.test(test$richness, x, method="spearman")$p.value)
diet_test_result = data.frame(rho=t(cor(test$richness, test[,-1], method="spearman")), p=apply(test[,-1], 2, function(x) wilcox.test(test$richness~x)$p.value))
diet_test_result[which(diet_test_result$p<0.05),]
test = merge(basal_richness,basal_diet[which(basal_diet$visite=="after_study"),], by.x="Subject_Id", by.y="sujet")
for(i in 5:dim(test)[2]){
test[,i] = as.numeric(as.character(test[,i]))
}
test = test[, c(2,4+which(apply(test[-c(1:4)],2,sum)!=0))]
cor(test$richness, test[,-1], method="spearman")
apply(test[,-1], 2, function(x) cor.test(test$richness, x, method="spearman")$p.value)
diet_test_result = data.frame(rho=t(cor(test$richness, test[,-1], method="spearman")), p=apply(test[,-1], 2, function(x) wilcox.test(test$richness~x)$p.value))
diet_test_result[which(diet_test_result$p<0.05),]
test = merge(basal_richness,basal_diet, by.x="Subject_Id", by.y="sujet")
for(i in 5:dim(test)[2]){
test[,i] = as.numeric(as.character(test[,i]))
}
test = test[, c(2,4+which(apply(test[-c(1:4)],2,sum)!=0))]
cor(test$richness, test[,-1], method="spearman")
apply(test[,-1], 2, function(x) cor.test(test$richness, x, method="spearman")$p.value)
diet_test_result = data.frame(rho=t(cor(test$richness, test[,-1], method="spearman")), p=apply(test[,-1], 2, function(x) wilcox.test(test$richness~x)$p.value))
diet_test_result[which(diet_test_result$p<0.05),]
test = merge(basal_richness,basal_diet[which(basal_diet$visite=="before_study" & basal_diet$jour=="-1"),], by.x="Subject_Id", by.y="sujet")
#test = merge(basal_richness,basal_diet[which(basal_diet$visite=="before_study"),], by.x="Subject_Id", by.y="sujet")
#test = merge(basal_richness,basal_diet[which(basal_diet$visite=="after_study"),], by.x="Subject_Id", by.y="sujet")
#test = merge(basal_richness,basal_diet, by.x="Subject_Id", by.y="sujet")
for(i in 5:dim(test)[2]){
test[,i] = as.numeric(as.character(test[,i]))
}
test = test[, c(2,4+which(apply(test[-c(1:4)],2,sum)!=0))]
cor(test$richness, test[,-1], method="spearman")
apply(test[,-1], 2, function(x) cor.test(test$richness, x, method="spearman")$p.value)
diet_test_result = data.frame(rho=t(cor(test$richness, test[,-1], method="spearman")), p=apply(test[,-1], 2, function(x) wilcox.test(test$richness~x)$p.value))
diet_test_result[which(diet_test_result$p<0.05),]
melt(test, id.vars=c("richnness"))
library(reshape2)
melt(test, id.vars=c("richnness"))
melt(test, id.vars=c("richness"))
ggplot(melt(test, id.vars=c("richness")), aes(x=variable, y=richness)) + geom_boxplot()
ggplot(melt(test, id.vars=c("richness")), aes(x=variable, y=richness)) + geom_boxplot() + facet_wrap(.~variable, nrow=3)
ggplot(melt(test, id.vars=c("richness")), aes(x=variable, y=richness)) + geom_boxplot() + facet_wrap(variable~, nrow=3)
ggplot(melt(test, id.vars=c("richness")), aes(x=variable, y=richness)) + geom_boxplot() + facet_wrap(variable~., nrow=3)
ggplot(melt(test, id.vars=c("richness")), aes(x=variable, y=richness)) + geom_boxplot() + facet_wrap(variable~. , nrow=3)
ggplot(melt(test, id.vars=c("richness")), aes(x=variable, y=richness)) + geom_boxplot() + facet_wrap(aes(variable~. ), nrow=3)
ggplot(melt(test, id.vars=c("richness")), aes(x=variable, y=richness)) + geom_boxplot()
ggplot(melt(test, id.vars=c("richness")), aes(x=as.character(value), y=richness)) + geom_boxplot() + facet_wrap(variable~. , nrow=3)
ggplot(melt(test, id.vars=c("richness")), aes(x=as.character(value), y=richness)) + geom_boxplot()
ggplot(melt(test, id.vars=c("richness")), aes(fill=as.character(value), y=richness, x=variable)) + geom_boxplot()
ggplot(melt(test, id.vars=c("richness")), aes(fill=as.character(value), y=richness, x=variable)) + geom_boxplot() + coord_flip()
ggplot(melt(test, id.vars=c("richness")), aes(fill=as.character(value), y=richness, x=variable)) + geom_violin() + coord_flip()
ggplot(melt(test, id.vars=c("richness")), aes(fill=as.character(value), y=richness, x=variable)) + geom_boxplot() + coord_flip()
test = merge(basal_richness,basal_diet[which(basal_diet$visite=="before_study" & basal_diet$jour=="-1"),], by.x="Subject_Id", by.y="sujet")
#test = merge(basal_richness,basal_diet[which(basal_diet$visite=="before_study"),], by.x="Subject_Id", by.y="sujet")
#test = merge(basal_richness,basal_diet[which(basal_diet$visite=="after_study"),], by.x="Subject_Id", by.y="sujet")
#test = merge(basal_richness,basal_diet, by.x="Subject_Id", by.y="sujet")
for(i in 5:dim(test)[2]){
test[,i] = as.numeric(as.character(test[,i]))
}
test = test[, c(2,4+which(apply(test[-c(1:4)],2,sum)!=0))]
cor(test$richness, test[,-1], method="spearman")
apply(test[,-1], 2, function(x) cor.test(test$richness, x, method="spearman")$p.value)
diet_test_result = data.frame(rho=t(cor(test$richness, test[,-1], method="spearman")), p=apply(test[,-1], 2, function(x) wilcox.test(test$richness~x)$p.value))
diet_test_result[which(diet_test_result$p<0.05),]
ggplot(melt(test, id.vars=c("richness")), aes(fill=as.character(value), y=richness, x=variable)) + geom_boxplot() + coord_flip()
test = merge(basal_richness,basal_diet, by.x="Subject_Id", by.y="sujet")
for(i in 5:dim(test)[2]){
test[,i] = as.numeric(as.character(test[,i]))
}
test = test[, c(2,4+which(apply(test[-c(1:4)],2,sum)!=0))]
cor(test$richness, test[,-1], method="spearman")
apply(test[,-1], 2, function(x) cor.test(test$richness, x, method="spearman")$p.value)
diet_test_result = data.frame(rho=t(cor(test$richness, test[,-1], method="spearman")), p=apply(test[,-1], 2, function(x) wilcox.test(test$richness~x)$p.value))
diet_test_result[which(diet_test_result$p<0.05),]
ggplot(melt(test, id.vars=c("richness")), aes(fill=as.character(value), y=richness, x=variable)) + geom_boxplot() + coord_flip()
test = merge(basal_richness,basal_diet[which(basal_diet$visite=="before_study"),], by.x="Subject_Id", by.y="sujet")
for(i in 5:dim(test)[2]){
test[,i] = as.numeric(as.character(test[,i]))
}
test = test[, c(2,4+which(apply(test[-c(1:4)],2,sum)!=0))]
cor(test$richness, test[,-1], method="spearman")
apply(test[,-1], 2, function(x) cor.test(test$richness, x, method="spearman")$p.value)
diet_test_result = data.frame(rho=t(cor(test$richness, test[,-1], method="spearman")), p=apply(test[,-1], 2, function(x) wilcox.test(test$richness~x)$p.value))
diet_test_result[which(diet_test_result$p<0.05),]
ggplot(melt(test, id.vars=c("richness")), aes(fill=as.character(value), y=richness, x=variable)) + geom_boxplot() + coord_flip()
test
dudi.acm(test(-1,])
dudi.acm(test[-1,])
diet.richness.bca
pcaiv(diet.richness.bca[,2:4], diet.richness.bca$richness)
pcaiv(diet.richness.bca$li, diet.richness.bca$richness)
pcaiv(diet.richness.bca, diet.richness.bca$richness)
pcaiv(diet.bca, diet.richness.bca$richness)
pcaiv(diet.bca, diet.richness.bca$richness, nf=1, scan =F)
pcaiv(diet.bca, diet.richness.bca$richness, nf=1, scan =F)$co
randtest(pcaiv(diet.bca, diet.richness.bca$richness, nf=1, scan =F))
head(basal_diet)
apply(basal_diet[,-c(1:3)] , 2, tapply, as.factor(basal_diet[,1]:basal_diet[,3]) ,sum)
apply(basal_diet[,-c(1:3)] , 2, tapply, as.factor(as.factor(basal_diet[,1]):as.factor(basal_diet[,3])) ,sum)
as.factor(as.factor(basal_diet[,1]):as.factor(basal_diet[,3]))
apply(basal_diet[,-c(1:3)] , 2, function(x){ tapply(as.numeric(x), as.factor(as.factor(basal_diet[,1]):as.factor(basal_diet[,3])) ,sum } )
apply(basal_diet[,-c(1:3)] , 2, function(x){ tapply(as.numeric(x), as.factor(as.factor(basal_diet[,1]):as.factor(basal_diet[,3])) ,sum) } )
apply(basal_diet[,-c(1:3)] , 2, function(x){ tapply(as.numeric(x), as.factor(as.factor(basal_diet[,1]))) ,sum) } )
apply(basal_diet[,-c(1:3)] , 2, function(x){ tapply(as.numeric(x), as.factor(basal_diet[,1]) ,sum) } )
test_combine = apply(basal_diet[,-c(1:3)] , 2, function(x){ tapply(as.numeric(x), as.factor(basal_diet[,1]) ,sum) } )
test = merge(basal_richness, data.frame(Subject_Id=row.names(test_combine),test_combine)  )
test
for(i in 5:dim(test)[2]){
test[,i] = as.numeric(as.character(test[,i]))
}
test = test[, c(2,4+which(apply(test[-c(1:4)],2,sum)!=0))]
cor(test$richness, test[,-1], method="spearman")
apply(test[,-1], 2, function(x) cor.test(test$richness, x, method="spearman")$p.value)
diet_test_result = data.frame(rho=t(cor(test$richness, test[,-1], method="spearman")), p=apply(test[,-1], 2, function(x) wilcox.test(test$richness~x)$p.value))
diet_test_result[which(diet_test_result$p<0.05),]
diet_test_result = data.frame(rho=t(cor(test$richness, test[,-1], method="spearman")), p=apply(test[,-1], 2, function(x) cor.test(test$richness,x, method="spearman")$p.value))
diet_test_result[which(diet_test_result$p<0.05),]
plot(test$richness, test$biscuits)
plot(test$richness, test$mais)
plot(test$richness, test$ketchup)
test_combine = apply(basal_diet[which(basal_diet$visite=="before_study"),-c(1:3)] , 2, function(x){ tapply(as.numeric(x), as.factor(basal_diet[which(basal_diet$visite=="before_study"),1]) ,sum) } )
test = merge(basal_richness, data.frame(Subject_Id=row.names(test_combine),test_combine)  )
#test = merge(basal_richness,basal_diet[which(basal_diet$visite=="before_study"),], by.x="Subject_Id", by.y="sujet")
#test = merge(basal_richness,basal_diet[which(basal_diet$visite=="after_study"),], by.x="Subject_Id", by.y="sujet")
#test = merge(basal_richness,basal_diet, by.x="Subject_Id", by.y="sujet")
for(i in 5:dim(test)[2]){
test[,i] = as.numeric(as.character(test[,i]))
}
test = test[, c(2,4+which(apply(test[-c(1:4)],2,sum)!=0))]
cor(test$richness, test[,-1], method="spearman")
apply(test[,-1], 2, function(x) cor.test(test$richness, x, method="spearman")$p.value)
diet_test_result = data.frame(rho=t(cor(test$richness, test[,-1], method="spearman")), p=apply(test[,-1], 2, function(x) wilcox.test(test$richness~x)$p.value))
diet_test_result = data.frame(rho=t(cor(test$richness, test[,-1], method="spearman")), p=apply(test[,-1], 2, function(x) cor.test(test$richness,x, method="spearman")$p.value))
diet_test_result[which(diet_test_result$p<0.05),]
plot(test$richness, test$mais)
test[,-1]
scatter(dudi.pca(test, scannf=F, nf=3))
scatter(dudi.pca(test, scannf=F, nf=3))
dudi.pca(test, scannf=F, nf=3)$eig/ sum(dudi.pca(test, scannf=F, nf=3)$eig)
dudi.pca(test, scannf=F, nf=3)
data.frame(test$richness, dudi.pca(test, scannf=F, nf=3)$co)
data.frame(test$richness, dudi.pca(test, scannf=F, nf=3)$li)
ggplot(data.frame(test$richness, dudi.pca(test, scannf=F, nf=3)$li)) + geom_point(aes(x=Axis1, y=Axis2, size=test.richness))
cor(test$richness, dudi.pca(test, scannf=F, nf=3)$li)
cor(test$richness, dudi.pca(test, scannf=F, nf=10)$li)
cor(test$richness, dudi.pca(test[,-1], scannf=F, nf=10)$li)
ggplot(data.frame(test$richness, dudi.pca(test[,-1], scannf=F, nf=3)$li)) + geom_point(aes(x=Axis2, y=Axis9, size=test.richness))
ggplot(data.frame(test$richness, dudi.pca(test[,-1], scannf=F, nf=10)$li)) + geom_point(aes(x=Axis2, y=Axis9, size=test.richness))
dudi.pca(test[,-1], scannf=F, nf=3)$eig/ sum(dudi.pca(test[,-1], scannf=F, nf=3)$eig)
diet.bca
diet.bca$tab
scatter(dudi.pca(diet.bca$tab, nf=3, scan=F))
scatter(dudi.pca(diet.bca$tab, nf=3, scan=F))
cor(test$richness, dudi.pca(test[,-1], scannf=F, nf=10)$li)
cor(test$richness, dudi.pca(test[,-1], scannf=F, nf=10, method="spearman")$li)
cor(test$richness, dudi.pca(test[,-1], scannf=F, nf=10)$li,  method="spearman")
ggplot(data.frame(test$richness, dudi.pca(test[,-1], scannf=F, nf=10)$li)) + geom_point(aes(x=Axis2, y=Axis3, size=test.richness))
ggplot(data.frame(test$richness, dudi.pca(test[,-1], scannf=F, nf=10)$li)) + geom_point(aes(x=Axis1, y=Axis3, size=test.richness))
library(ggtern)
install.packages("ggtern")
library(ggtern)
ggplot(data.frame(test$richness, dudi.pca(test[,-1], scannf=F, nf=10)$li)) + coord_tern() + geom_point(aes(x=Axis1, y=Axis2, z=Axis=3,  size=test.richness))
ggplot(data.frame(test$richness, dudi.pca(test[,-1], scannf=F, nf=10)$li)) + coord_tern() + geom_point(aes(x=Axis1, y=Axis2, z=Axis3,  size=test.richness))
ggplot(data.frame(test$richness, dudi.pca(test[,-1], scannf=F, nf=10)$li)) + coord_tern() + atomic_percent() + geom_point(aes(x=Axis1, y=Axis2, z=Axis3,  size=test.richness))
ggplot(data.frame(test$richness, dudi.pca(test[,-1], scannf=F, nf=10)$li)) + coord_tern() + geom_point(aes(x=(Axis1-min(Axis1))/(max(Axis1)-min(Axis1)), y=(Axis1-min(Axis1))/(max(Axis1)-min(Axis1)), z=(Axis1-min(Axis1))/(max(Axis1)-min(Axis1)),  size=test.richness))
ggplot(data.frame(test$richness, dudi.pca(test[,-1], scannf=F, nf=10)$li)) + coord_tern() + geom_point(aes(x=(Axis1-min(Axis1))/(max(Axis1)-min(Axis1)), y=(Axis1-min(Axis1))/(max(Axis1)-min(Axis1)), z=(Axis3-min(Axis3))/(max(Axis3)-min(Axis3)),  size=test.richness))
ggplot(data.frame(test$richness, dudi.pca(test[,-1], scannf=F, nf=10)$li)) + coord_tern() + geom_point(aes(x=(Axis1-min(Axis1))/(max(Axis1)-min(Axis1)), y=(Axis1-min(Axis2))/(max(Axis2)-min(Axis2)), z=(Axis3-min(Axis3))/(max(Axis3)-min(Axis3)),  size=test.richness))
